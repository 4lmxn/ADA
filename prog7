#include <stdio.h>
#include <limits.h>

#define INF INT_MAX
#define N 10

int tsp(int graph[N][N], int visited[], int currPos, int n, int count, int cost);

int main() {
    int n, i, j;
    int graph[N][N], visited[N] = {0};
    int min_cost;

    printf("Enter the number of cities: ");
    scanf("%d", &n);

    printf("Enter the cost matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    visited[0] = 1;
    min_cost = tsp(graph, visited, 0, n, 1, 0);

    printf("Minimum cost = %d\n", min_cost);
    return 0;
}

int tsp(int graph[N][N], int visited[], int currPos, int n, int count, int cost) {
    if (count == n) {
        return cost + graph[currPos][0];
    }

    int min_cost = INF;
    for (int i = 0; i < n; i++) {
        if (!visited[i] && graph[currPos][i]) {
            visited[i] = 1;
            int temp_cost = tsp(graph, visited, i, n, count + 1, cost + graph[currPos][i]);
            min_cost = (temp_cost < min_cost) ? temp_cost : min_cost;
            visited[i] = 0;
        }
    }

    return min_cost;
}
