#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>
#include <time.h>

void quickSort(int arr[], int low, int high);
int partition(int arr[], int low, int high);

void generateRandomNumbers(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 10000;
    }
}

int main() {
    struct timeval tv;
    double start, end;
    int a[500000], n;

    printf("Enter the number of elements to sort: ");
    scanf("%d", &n);

    generateRandomNumbers(a, n);

    gettimeofday(&tv, NULL);
    start = tv.tv_sec + (tv.tv_usec / 1000000.0);
    quickSort(a, 0, n - 1);
    gettimeofday(&tv, NULL);
    end = tv.tv_sec + (tv.tv_usec / 1000000.0);

    printf("Sorted Array:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\nTime taken: %lf seconds\n", end - start);

    return 0;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pivot = partition(arr, low, high);
        quickSort(arr, low, pivot - 1);
        quickSort(arr, pivot + 1, high);
    }
}

int partition(int arr[], int low, int high) {
    int pivot = arr[low];
    int i = low, j = high + 1;

    do {
        do { i++; } while (arr[i] < pivot);
        do { j--; } while (arr[j] > pivot);

        if (i < j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    } while (i < j);

    int temp = arr[low];
    arr[low] = arr[j];
    arr[j] = temp;

    return j;
}
